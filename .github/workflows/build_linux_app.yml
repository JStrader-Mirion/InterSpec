name: Linux Build

on:
  push:
    branches: [ feature/LinuxCiBuild ] # Trigger the workflow on push to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu environment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: ${{ github.workspace }}/InterSpec_code
          submodules: true # Recursively checkout submodules

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ${{runner.temp}}/build_linux_working_dir
          key: ${{ runner.os }}-build-npm-${{ hashFiles('target/electron/package.json') }}
          restore-keys: |
            ${{ runner.os }}-build-npm-

      - name: Cache c++ dependencies
        uses: actions/cache@v3
        with:
          path: ${{runner.temp}}/build_linux_electron
          key: ${{ runner.os }}-build-cpp-${{ hashFiles('cmake/FetchInterSpecDeps.txt') }}
          restore-keys: |
            ${{ runner.os }}-build-cpp-
      
      - name: Make build directories
        shell: bash
        working-directory: ${{runner.temp}}
        run: |
          mkdir -p build_linux_electron
          mkdir -p build_linux_working_dir

      - name: Configure and build in Docker
        uses: docker/run@v1
        working-directory: ${{runner.temp}}
        env:
          LEAFLET_KEY: ${{ secrets.LEAFLET_KEY }}
        with:
          image: quay.io/pypa/manylinux2014_x86_64
          options: --name manylinux-container -v "${{runner.temp}}/InterSpec_code":/interspec -v "${{runner.temp}}/build_linux_electron"/:/build_app -v "${{runner.temp}}/build_working_dir":/build_linux_working_dir
          entrypoint: /bin/bash
          args: -c "/interspec/target/electron/Docker/build_linux_app_from_docker.sh /interspec /build_app /build_working_dir"

